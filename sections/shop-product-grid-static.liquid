
<main id="main-content" class="min-h-screen xl:container xl:mx-auto" role="main"
      aria-label="Main Site Content">
    <div class="mt-12">
        <h1 class="mb-2 text-xs uppercase md:text-sm lg:mb-5">[&nbsp;&nbsp;All Products <sup>{{ collection.products.count }}</sup>&nbsp;&nbsp;]</h1>
        <div class="relative flex items-center justify-between pb-3 mb-8 border-b border-silver">
            <button data-filter-trigger class="text-4xl font-medium tracking-tighter uppercase transition-all lg:text-5xl focus:opacity-50 hover:opacity-50" aria-expanded="false" aria-controls="filter-dropdown" type="button">Filter+</button>

            {% render 'shop-filter' %}

            <div class="flex self-end text-sm lg:items-center">
                <span class="hidden lg:inline-block">View</span>

                <div>
                    <button data-grid data-columns="4" type="button" class="inline-block ml-4 text-silver hover:text-[#000]">
                        <svg class="inline-block pointer-events-none lg:hidden" width="17" height="13" viewbox="0 0 17 13" fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <rect x="9" width="8" height="6" fill="currentColor" />
                            <rect x="9" y="7" width="8" height="6" fill="currentColor" />
                            <rect width="8" height="6" fill="currentColor" />
                            <rect y="7" width="8" height="6" fill="currentColor" />
                        </svg>
                        <svg class="hidden pointer-events-none lg:inline-block" width="15" height="11" viewbox="0 0 15 11" fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <rect width="3" height="5" fill="currentColor" />
                            <rect x="8" width="3" height="5" fill="currentColor" />
                            <rect x="4" width="3" height="5" fill="currentColor" />
                            <rect y="6" width="3" height="5" fill="currentColor" />
                            <rect x="8" y="6" width="3" height="5" fill="currentColor" />
                            <rect x="12" width="3" height="5" fill="currentColor" />
                            <rect x="12" y="6" width="3" height="5" fill="currentColor" />
                            <rect x="4" y="6" width="3" height="5" fill="currentColor" />
                        </svg>
                        <span class="sr-only">Toggle 4 column grid</span>
                    </button>
                    <button data-grid data-columns="2" type="button" class="inline-block ml-3 text-silver hover:text-[#000] grid-active">
                        <svg class="inline-block pointer-events-none lg:hidden" width="17" height="13" viewbox="0 0 17 13" fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <rect width="17" height="13" fill="currentColor" />
                        </svg>
                        <svg class="hidden pointer-events-none lg:inline-block" width="17" height="11" viewbox="0 0 17 11" fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <rect x="9" width="8" height="11" fill="currentColor" />
                            <rect width="8" height="11" fill="currentColor" />
                        </svg>
                        <span class="sr-only">Toggle 2 column grid</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <section id="grid-toggle" class="grid gap-[1.5rem] md:gap-4 md:grid-cols-2">
        {% for product in collection.products %}
            {% render 'shop-card', product: product %}
        {% endfor %}
    </section>
</main>

<script>
    const ShopGrid = () => {
        const buttons = document.querySelectorAll('[data-grid]')
        // const gridOptionTwo = document.querySelector('[data-grid="grid-2"]')
        const grid = document.getElementById('grid-toggle')

        for (const button of buttons) {
            button.addEventListener('click', (event) => {
                const { target } = event
                const active = document.querySelector('.grid-active')

                if (active) {
                    active.classList.remove('grid-active')
                }

                target.classList.add('grid-active')

                if (target.dataset.columns === '4') {
                    grid.classList.remove('md:grid-cols-2')
                    grid.classList.remove('gap-[1.5rem]')
                    grid.classList.add('md:grid-cols-4')
                    grid.classList.add('grid-cols-2')
                    grid.classList.add('gap-2')
                } else {
                    grid.classList.remove('grid-cols-2')
                    grid.classList.remove('gap-2')
                    grid.classList.remove('md:grid-cols-4')
                    grid.classList.add('md:grid-cols-2')
                    grid.classList.add('gap-[1.5rem]')
                }
            })
        }
    }

    ShopGrid()

    const ShopFilter = () => {
        const trigger = document.querySelector('[data-filter-trigger]')
        const panel = document.getElementById('filter-dropdown')

        trigger && trigger.addEventListener('click', () => {
            if (!panel.classList.contains('filter-active')) {
                trigger.innerHTML = 'Filter-'
                console.log(trigger)
                trigger.classList.add('focus:opacity-50')
                trigger.setAttribute('aria-expanded', 'true')
                panel.setAttribute('aria-hidden', 'false')
                panel.classList.add('filter-active')
            } else {
                trigger.innerHTML = 'Filter+'
                trigger.classList.remove('focus:opacity-50')
                trigger.setAttribute('aria-expanded', 'false')
                panel.setAttribute('aria-hidden', 'true')
                panel.classList.remove('filter-active')
            }
        })

        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                trigger.innerHTML = 'Filter+'
                trigger.setAttribute('aria-expanded', 'false')
                panel.setAttribute('aria-hidden', 'true')
                panel.classList.remove('filter-active')
            }
        })

        document.addEventListener('mousedown', (e) => {
            if (!panel.contains(e.target) && e.target !== trigger) {
                trigger.innerHTML = 'Filter+'
                trigger.setAttribute('aria-expanded', 'false')
                panel.setAttribute('aria-hidden', 'true')
                panel.classList.remove('filter-active')
            }
        })
    }

    ShopFilter()
</script>
